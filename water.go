// Code generated by jsonschema. DO NOT EDIT.
package beerjson

// ID: https://raw.githubusercontent.com/beerjson/beerjson/master/json/water.json

// WaterAdditionType collects the attributes of each water addition for use in a recipe
type WaterAdditionType struct {
	WaterBase *WaterBase  `json:"WaterBase,omitempty"`
	Amount    *VolumeType `json:"amount,omitempty"`
}

// WaterBase provides unique properties to identify individual records of  brewing water.
type WaterBase struct {
	Calcium     ConcentrationType  `json:"calcium", validate:"required"`
	Carbonate   *ConcentrationType `json:"carbonate,omitempty"`
	Chloride    ConcentrationType  `json:"chloride", validate:"required"`
	Sodium      ConcentrationType  `json:"sodium", validate:"required"`
	Magnesium   ConcentrationType  `json:"magnesium", validate:"required"`
	Name        string             `json:"name", validate:"required"`
	Producer    *string            `json:"producer,omitempty"`
	Sulfate     ConcentrationType  `json:"sulfate", validate:"required"`
	Iron        *ConcentrationType `json:"iron,omitempty"`
	Flouride    *ConcentrationType `json:"flouride,omitempty"`
	Bicarbonate ConcentrationType  `json:"bicarbonate", validate:"required"`
	Nitrate     *ConcentrationType `json:"nitrate,omitempty"`
	Potassium   *ConcentrationType `json:"potassium,omitempty"`
	Nitrite     *ConcentrationType `json:"nitrite,omitempty"`
}

// WaterType collects the attributes of a brewing water to store as record information
type WaterType struct {
	Notes     *string    `json:"notes,omitempty"`
	WaterBase *WaterBase `json:"WaterBase,omitempty"`
	PH        *float64   `json:"pH,omitempty"`
}
